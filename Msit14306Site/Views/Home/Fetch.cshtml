
@{
    ViewData["Title"] = "Fetch";
}

<h1>Fetch</h1>
<div class="alert alert-primary" id="div1"></div>
<select id="select1"></select>
<img id="img1" class="img-thumbnail w-100" />

@section Scripts{
    <script>
        const divMessage = document.querySelector("#div1")
        const imgPhoto = document.querySelector("#img1")
        const selCity = document.querySelector("#select1")

        // console.log(fetch("@Url.Content("~/api/index")"))  //得到的是promise物件
        fetch("@Url.Content("~/Api/index")")
            .then(response => {
                console.log(response)
                console.log(response.ok) //true or false
                console.log(response.status) //200
                console.log(response.headers.get("content-encoding"))
                console.log(response.headers.get("content-type"))
                console.log(response.headers.get("date"))
                console.log(response.body)
                //console.log(response.text()) //得到另一個promise物件
                return response.text()

                //確認Server程式執行沒問題
                //if (response.ok) { }
                //else {console.log(response.status)}
            })
            .then(data => {
                //data是透過 response.text() 傳過來的結果
                console.log(data)
            })
            .catch(error =>console.log(error))

        fetch("@Url.Content("~/Api/Index")")
            .then(response => response.text())
            .then(data => divMessage.textContent = data)
            .catch(error => console.log(error));

        fetch("@Url.Content("~/Members/showphoto/3")") //api呼叫
            .then(response => response.blob()) //promise物件 裡面有圖的資訊 //資料的顯示跟讀取
            .then(datas => {
                imgPhoto.src = URL.createObjectURL(datas)
            })

        @*fetch("@Url.Content("~/Api/City")")
            .then(response => response.json())
            .then(datas => {
                datas.forEach(city => {
                    const opt = new Option(city, city)
                    selCity.Option.add(opt)
                })
            })*@

        async function LoadCities() {
            let response = await fetch("@Url.Content("~/Api/City")")
            let datas = await response.json()
            datas.forEach(city => {
                const opt = new Option(city, city)
                selCity.options.add(opt)
            })
        }
        LoadCities()
    </script>
}
