@{
    ViewData["Title"] = "Home Page";
}

@* View 中的 CSS 要放在 section 中 *@
@section Styles{

    <style>
        h1 {
            color: blue
        }
    </style>
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <ul id="ul1"></ul>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

@* View 中的 JavaScript、jQuery 要放在 section 中 *@
@section Scripts{

    <script>
        //console.log($('.display-4').text())
        //console.log("Hi +1");
        var emps = [{ "name": "Tom", "workYears": 3, "salary": 35000 },
                    { "name": "Jack", "workYears": 5, "salary": 40000 },
                    { "name": "Mary", "workYears": 7, "salary": 45000 }
        ];

        //emps => array or object => array
        //emps[1] => { "name": "Jack", "workYears": 5, "salary": 40000 } object
        //emps[1].salary => 40000

        //console.log(emps[0].name);
        //console.log(emps[2].workYears);

        for (let i = 0; i < emps.length; i++) {
            console.log(emps[i].name + " , " + emps[i].workYears + " , " + emps[i].salary);
        }

        //for (let i = 0, max = emps.length; i < max; i++) {
        //    console.log(emps[i].name)
        //    console.log(emps[i].workYears)
        //    console.log(emps[i].salary)
        //}

        //let items = [0:"a",1:"b",2:"c"] 陣列 
        //items[1] => b
        //let user = {"name":"Jack","key":"value"}物件
        //user.name => Jack
        //user.key => value



        //讀出emp裡面的所有資料
        var emps = [{ "name": "Tom", "workYears": 3, "salary": 35000 },
                    { "name": "Jack", "workYears": 5, "salary": 40000 },
                    { "name": "Mary", "workYears": 7, "salary": 45000 }
        ];

        //讀取資料
        const theU1 = document.querySelector("#ul1");

        //建立空物件
        const docfrag = document.createDocumentFragment()

        for (let i = 0; i < emps.length; i++) {
            //console.log(emp.employees[i].name)
            //console.log(emp.employees[i].workYears)
            //console.log(emp.employees[i].salary)
            //解構賦值 Destructuring Assignement
            const { name, workYears, salary } = emps[i]

            //顯示資料 DOM
            //const txtLi = document.createTextNode(emp.employees[i].name)  //建立文字節點 Jack
            const txtLi = document.createTextNode(name + " , " + workYears + " , " + salary)
            const eleLi = document.createElement("li") //<li></li>
            eleLi.appendChild(txtLi) //<li>Jack</li>

            docfrag.appendChild(eleLi);
        }
        theU1.appendChild(docfrag);

    </script>
}
